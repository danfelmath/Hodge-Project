LIB "solve.lib"; LIB "algebra.lib";  LIB "foliation.lib"; LIB "matrix.lib";
//---------------------------------------------------------------------------
//---------------------------GENERAL PROCEDURES------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
proc PolyAlgCycle (poly F, ideal f, int n)
"USAGE:
    PolyAlgCycle(polynomial_expression,ideal_expression, int_expression)
PURPOSE: 
    This procedure computes the general polynomial associated to a 
    algebraiccycle. The ideal f=<f1, f2,..., fn+1> defines a 
    complete intersection in the projective hypersurface given by F, 
    (e.g. Periods of Complete Intersection Algebraic Cycles, R. Villaflor) 
RETURN:
     The associated polynomial to the complete intersection given by f, 
     in the smooth hypersurface {F=0}.
SEE ALSO:

EXAMPLE: 
     example PolyAlgCycle; shows an example
"
{
int i; int j;
if (dim(std(jacob(F)))>0) {print("The hypersurface is not smooth")};
if (dim(std(jacob(F)))==0) //F=0 is smooth
{
ideal B=std(f);
if (NF(F,B)!=0){print("F does not belong to I")}
if (NF(F,B)==0) //F is in the ideal generated by algebraic cycles
{
ideal G=lift(B,F); // Coeff such that: Sum(G[i]*f[i])=F
matrix M[2*n+2][2*n+2];
j=1;
for (i=1;i<=2*n+1;i=i+2)
{
     M[1..2*n+2,i]=jacob(f[j]);
     j=j+1;
}
j=1;
for (i=2;i<=2*n+2;i=i+2)
{
     M[1..2*n+2,i]=jacob(G[j]);
     j=j+1;
}
poly P=det(M);
}
}
return(P);
}
example
{"EXAMPLE:"; echo=2;     
    int d=3;
    int n=2;
    int i;

    ring R=(0,c),(x(0..2*n+1)),dp;
    poly cp=cyclotomic(2*d); cp=subst(cp,x(0),c);
    minpoly=number(cp); //Polinomio ciclotomico

    poly F;
    for (i=0; i<=2*n+1;i=i+1) {F=F+x(i)^d;}
    print(F);
    ideal f;
    for (i=1;i<=n+1;i=i+1) {f=f, x(2*i-2)-c*x(2*i-1);}
    f=std(f);
    print(f);
    poly P=PolyAlgCycle(F,f,n);
    print(P);
}
//---------------------------------------------------------------------------

